<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAEBQYCBAUGBAQFBgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAQFBwMAAAASAAAAGAMEBgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDBQgAAAAlAAAAKwAAABIKCw8FDQ4QFgsNEAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQHAgEBAhEAAAA4AAAAOgAAABgKDA4pEBETlA4Q
        FCYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIDCQAAACUAAABIAAAARQAA
        AiALDQ6RCQwM7REUHEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwQDAQECFQAA
        ADgAAABOAAAARgQGCUsMDhDnExYa/B4jNZcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAABQYJAQAAAAAHBwoNBQQEUgMDBYUHBwi6AQED3wECBvAKCxL6GRwn/ict
        Pf80PFX+PUZm/kBKbP5AS2v/RVBz/kdTe/5GUXf/O0Fb/lteav5ITFb/NDlH/jg+VP4iJjT/JSgy/hUZ
        Jv4YHCv/HiIw/hATG/4NEh3/JCo6/jpDV/+Ajaj+uMXh/r/K4v+4w9j+qLTL/sHL4f+2vc/+IiUs7AgN
        EqItNUNHVFdmDQAAAAAAAAAAAAAAAAAAAAAAAAAABAUIAQAAAAAICRISFRcscSUpNLckJzbfLjRG8jY9
        Uf06QVn/P0dh/z9KZP88RGD/O0Rh/0NNbv9GUXf/R1N6/05chv9QXov/V2SM/4yWrv/v9fr/3OPt/0xR
        X/8qLTn/rbPD/73J3v9uepL/IyxD/zpEX/9HVHT/ZnKS/623z/+Ik67/sr/Z/7/M5P+9zOL/xdLo/8fS
        5//AzOH/kpuv/1Vcbv8gIyz6EhMZ1BAWG4wbISw8PEFLGzxBSwgAAAAAAAAAAAUGCQIDAwUHAwQGDRUX
        HSIgIzFWMjlLkD1DW71CSmXiP0lk9z9JZf43QV3+N0Bb/jlDYv5CS3H/QUxx/kVSef5NW4f/S1iC/kVQ
        a/7c4u//tsHV/lJddP5sepb/hJS3/puu0/5gcpf/XnCU/mt9pf5bapP/UWCH/m19pv+Gl7z+q7nX/rbE
        3/+6yOD+wM3k/sTP5f/Dz+T+y9Xq/s3V6f+qscT+dnyM/kpMVP8fICfgIiUqqSkvNUoCAgUDAQECCgEB
        AhQAAAAkAAAAMAAAADkAAAFCAwQITAkKFVcWGilvLDNGkT9GXrxSX3/zSFR3/jxGaf5FUHX/R1J6/kVR
        eP5JVX7/SFN5/kJJYv7Z4O7/sL3W/p6uzP6ZrNL/eY66/nSLuP53jbb/f5a//oqex/5GVHX/UmKE/oCU
        vv+Alb3+q7zc/rXE4P+9yuP+xNHm/sfR5v/M1uj+0drr/tvg8P/c4fH6y9Lh4qqxv8BtboOHVl12WVFY
        XysAAA0OAAADIQAAADQAAABFAAAATAAAAE8AAABQAAAAUAAAAFAAAABPAAAATAAAA0dKU3SgcH6l+U9c
        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
        ADcDBAYSGR0pAwAAAAA6TFwGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkuPQMQEhgFGx8pAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEB
        AgkAAAAsAAAAOQAAACEWGSUFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAQIAAAAVAAAAGgMEBgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAwYEBwgMBRATHQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////H///
        AAD///4f//8AAP///gP//wAA///8A///AAD///wD//8AAP//+AP//wAA///4Af//AAD///AB//8AAP//
        8AH//wAA/5/gAf/hAAD/g8AA/wEAAPAAgAA+AQAA8AAAABgBAADwAAAAAAEAAPgAAAAAAwAA+AAAAAAH
        AAD8AAAAAAcAAPwAAAAADwAA/gAAAAAfAAD+AAAAAD8AAP4AAAAAfwAA/AAAAAA/AAA8AAAAAD8AAPgA
        AAAAPwAAoAAAAAAPAACgAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAf
        AADwAAAAAf8AAPwAAAAB/wAA/gAAAAH/AAD+AAAAAf8AAP4AAAAB/wAA/AAAAAD/AAD8AAAAEP8AAPgA
        AAAc/wAA+AAAAA//AAD4PwA8D/8AAPj/AX8f/wAA//+D////AAD//4f///8AAP//x////wAA////////
        AAA=
</value>
  </data>
</root>